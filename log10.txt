PROGRAM STATE:
ID: 1
Execution stack:
(bool b;(int c;(b=true;(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c))))))) 
Symbol table:
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(int c;(b=true;(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c)))))) | bool b 
Symbol table:
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(int c;(b=true;(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c)))))) | bool b 
Symbol table:
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(int c;(b=true;(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c)))))) 
Symbol table:
b -> false
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(int c;(b=true;(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c)))))) 
Symbol table:
b -> false
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(b=true;(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c))))) | int c 
Symbol table:
b -> false
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(b=true;(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c))))) | int c 
Symbol table:
b -> false
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(b=true;(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c))))) 
Symbol table:
b -> false
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(b=true;(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c))))) 
Symbol table:
b -> false
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c)))) | b=true 
Symbol table:
b -> false
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c)))) | b=true 
Symbol table:
b -> false
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c)))) 
Symbol table:
b -> true
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(c = b ? 100 : 100;(print(c);(c = false ? 100 : 200;print(c)))) 
Symbol table:
b -> true
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(print(c);(c = false ? 100 : 200;print(c))) | c = b ? 100 : 100 
Symbol table:
b -> true
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(print(c);(c = false ? 100 : 200;print(c))) | c = b ? 100 : 100 
Symbol table:
b -> true
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(print(c);(c = false ? 100 : 200;print(c))) | (IF(b) THEN(c=100)ELSE(c=100)) 
Symbol table:
b -> true
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(print(c);(c = false ? 100 : 200;print(c))) | (IF(b) THEN(c=100)ELSE(c=100)) 
Symbol table:
b -> true
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(print(c);(c = false ? 100 : 200;print(c))) | c=100 
Symbol table:
b -> true
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(print(c);(c = false ? 100 : 200;print(c))) | c=100 
Symbol table:
b -> true
c -> 0
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(print(c);(c = false ? 100 : 200;print(c))) 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(print(c);(c = false ? 100 : 200;print(c))) 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(c = false ? 100 : 200;print(c)) | print(c) 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(c = false ? 100 : 200;print(c)) | print(c) 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(c = false ? 100 : 200;print(c)) 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
(c = false ? 100 : 200;print(c)) 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
print(c) | c = false ? 100 : 200 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
print(c) | c = false ? 100 : 200 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
print(c) | (IF(false) THEN(c=100)ELSE(c=200)) 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
print(c) | (IF(false) THEN(c=100)ELSE(c=200)) 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
print(c) | c=200 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
print(c) | c=200 
Symbol table:
b -> true
c -> 100
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
print(c) 
Symbol table:
b -> true
c -> 200
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
print(c) 
Symbol table:
b -> true
c -> 200
Heap: 
Output list:
100 
File Table:
Latch table:


PROGRAM STATE:
ID: 1
Execution stack:
Symbol table:
b -> true
c -> 200
Heap: 
Output list:
100 200 
File Table:
Latch table:


